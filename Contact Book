import tkinter as tk
from tkinter import messagebox

class ContactBook(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Contact Book")
        self.contacts = {}

        self.label_name = tk.Label(self, text="Name:")
        self.label_name.grid(row=0, column=0, padx=5, pady=5)
        self.entry_name = tk.Entry(self)
        self.entry_name.grid(row=0, column=1, padx=5, pady=5)

        self.label_phone = tk.Label(self, text="Phone:")
        self.label_phone.grid(row=1, column=0, padx=5, pady=5)
        self.entry_phone = tk.Entry(self)
        self.entry_phone.grid(row=1, column=1, padx=5, pady=5)

        self.button_add = tk.Button(self, text="Add Contact", command=self.add_contact)
        self.button_add.grid(row=2, column=0, columnspan=2, padx=5, pady=5, sticky="WE")

        self.button_search = tk.Button(self, text="Search Contact", command=self.search_contact)
        self.button_search.grid(row=3, column=0, columnspan=2, padx=5, pady=5, sticky="WE")

        self.button_update = tk.Button(self, text="Update Contact", command=self.update_contact)
        self.button_update.grid(row=4, column=0, columnspan=2, padx=5, pady=5, sticky="WE")

        self.button_delete = tk.Button(self, text="Delete Contact", command=self.delete_contact)
        self.button_delete.grid(row=5, column=0, columnspan=2, padx=5, pady=5, sticky="WE")

    def add_contact(self):
        name = self.entry_name.get()
        phone = self.entry_phone.get()
        if name and phone:
            self.contacts[name] = phone
            messagebox.showinfo("Success", "Contact added successfully!")
        else:
            messagebox.showerror("Error", "Name and phone number cannot be empty!")

    def search_contact(self):
        name = self.entry_name.get()
        if name in self.contacts:
            messagebox.showinfo("Contact Found", f"Name: {name}\nPhone: {self.contacts[name]}")
        else:
            messagebox.showerror("Contact Not Found", f"Contact with name {name} not found!")

    def update_contact(self):
        name = self.entry_name.get()
        phone = self.entry_phone.get()
        if name in self.contacts:
            self.contacts[name] = phone
            messagebox.showinfo("Success", "Contact updated successfully!")
        else:
            messagebox.showerror("Error", f"Contact with name {name} not found!")

    def delete_contact(self):
        name = self.entry_name.get()
        if name in self.contacts:
            del self.contacts[name]
            messagebox.showinfo("Success", "Contact deleted successfully!")
        else:
            messagebox.showerror("Error", f"Contact with name {name} not found!")


if __name__ == "__main__":
    app = ContactBook()
    app.mainloop()
